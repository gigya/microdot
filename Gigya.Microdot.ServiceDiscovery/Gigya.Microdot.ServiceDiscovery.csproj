<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>
		<LangVersion>8</LangVersion>
		<CodeAnalysisRuleSet>$(SolutionDir)main.ruleset</CodeAnalysisRuleSet>
		<AssemblyTitle>Gigya.Microdot.ServiceDiscovery</AssemblyTitle>
		<Description>
			Using this component you can find other Microdot services (and any other
			remote system), perform client-side load balancing between multiple
			servers, detect and	skip unresponsive servers and resume using them
			when they return to full operation. Discovery is typically perfomed with
			Consul by HashiCorp	(http://consul.io) but it also supports manual server
			lists specified in Microdot configuration (see NuGet package
			Gigya.Microdot.Configuration) and can be expanded to support additional
			service discovery systems.
		</Description>
		<RepositoryUrl>https://github.com/gigya/microdot</RepositoryUrl>
		<PackageProjectUrl>https://github.com/gigya/microdot/blob/master/LICENSE.md</PackageProjectUrl>
		<PackageTags>gigya microdot microservice microservices discovery service-discovery consul</PackageTags>
		<Authors>Gigya Inc.</Authors>
		<Copyright>© 2021 Gigya Inc.</Copyright>
		<IncludeSymbols>true</IncludeSymbols>
		<RestoreLockedMode Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreLockedMode>
		<OutputType>Library</OutputType>
		<OutputPath>bin\$(Configuration)</OutputPath>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DebugType>full</DebugType>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<DebugType>pdbonly</DebugType>
	</PropertyGroup>
	<ItemGroup>
		<None Remove="nugetPackages\**" />
		<None Remove="symbolPackages\**" />
	</ItemGroup>
	<Target Name="CopyPackage" AfterTargets="Pack">
		<Copy SourceFiles="$(OutputPath)$(PackageId).$(PackageVersion).nupkg" DestinationFolder="$(OutputPath)..\..\..\nugetPackages" />
		<Copy SourceFiles="$(OutputPath)$(PackageId).$(PackageVersion).symbols.nupkg" DestinationFolder="$(OutputPath)..\..\..\symbolPackages" />
	</Target>
	<ItemGroup>
		<PackageReference Include="Gigya.ServiceContract" Version="4.*" />
		<PackageReference Include="Newtonsoft.Json" Version="12.*" />
		<PackageReference Include="System.ComponentModel.Annotations" Version="5.*" />
		<PackageReference Include="System.Net.Http" Version="4.3.4" />
		<PackageReference Include="Microsoft.CSharp" Version="4.7.*" />
		<PackageReference Include="System.Threading.Tasks.Dataflow" Version="5.*" />
		<PackageReference Include="Nito.AsyncEx" Version="5.1.*" />
		<PackageReference Include="System.Collections.Immutable" Version="5.*" />
		<PackageReference Include="System.ValueTuple" Version="4.5.*" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\Gigya.Microdot.Configuration\Gigya.Microdot.Configuration.csproj" />
		<ProjectReference Include="..\Gigya.Microdot.Interfaces\Gigya.Microdot.Interfaces.csproj" />
		<ProjectReference Include="..\Gigya.Microdot.SharedLogic\Gigya.Microdot.SharedLogic.csproj" />
	</ItemGroup>
	<ItemGroup>
		<Content Include="Rewrite\_diagram_from_draw.io.xml" />
		<Content Include="Rewrite\_diagram.png" />
	</ItemGroup>
</Project>