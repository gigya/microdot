<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<AssemblyTitle>Gigya.Microdot.ServiceDiscovery</AssemblyTitle>
		<Description>
			Using this component you can find other Microdot services (and any other
			remote system), perform client-side load balancing between multiple
			servers, detect and	skip unresponsive servers and resume using them
			when they return to full operation. Discovery is typically perfomed with
			Consul by HashiCorp	(http://consul.io) but it also supports manual server
			lists specified in Microdot configuration (see NuGet package
			Gigya.Microdot.Configuration) and can be expanded to support additional
			service discovery systems.
		</Description>
		<PackageTags>gigya microdot microservice microservices discovery service-discovery consul</PackageTags>
	</PropertyGroup>
	<ItemGroup>
		<Content Include="Rewrite\_diagram_from_draw.io.xml" />
		<Content Include="Rewrite\_diagram.png" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\Gigya.Microdot.SharedLogic\Gigya.Microdot.SharedLogic.csproj" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.CSharp" />		
		<PackageReference Include="System.ValueTuple" />
	</ItemGroup>
</Project>